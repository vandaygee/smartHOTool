/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smarthometool;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import java.io.File;
import java.io.FileWriter;

/**
 *
 * @author Duchess
 */
public class frmMain extends javax.swing.JFrame {
    JFileChooser fileChooser;
    String datasetPath,saveJSONFilePath,convertedJSON;

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabMain = new javax.swing.JTabbedPane();
        pageConvertToJSON = new javax.swing.JPanel();
        btnLoadDataset = new javax.swing.JButton();
        lblLoadDatasetPath = new javax.swing.JLabel();
        lblSaveJSONStatus = new javax.swing.JLabel();
        lblLoadDatasetPath2 = new javax.swing.JLabel();
        txtTimeAttribute = new javax.swing.JTextField();
        txtValueAttribute = new javax.swing.JTextField();
        btnConvertToJSON = new javax.swing.JButton();
        btnSaveJSONData = new javax.swing.JButton();
        lblLoadDatasetPath3 = new javax.swing.JLabel();
        lblConvertToJSONStatus = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuLoadToJSON = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnLoadDataset.setText("Load Dataset");
        btnLoadDataset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadDatasetActionPerformed(evt);
            }
        });

        lblLoadDatasetPath.setText("jLabel1");

        lblSaveJSONStatus.setText("       ");

        lblLoadDatasetPath2.setText("Time Attribute Name:");

        btnConvertToJSON.setText("Convert To JSON");
        btnConvertToJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertToJSONActionPerformed(evt);
            }
        });

        btnSaveJSONData.setText("Save Data");
        btnSaveJSONData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveJSONDataActionPerformed(evt);
            }
        });

        lblLoadDatasetPath3.setText("Value Attribute Name:");

        lblConvertToJSONStatus.setText("       ");

        javax.swing.GroupLayout pageConvertToJSONLayout = new javax.swing.GroupLayout(pageConvertToJSON);
        pageConvertToJSON.setLayout(pageConvertToJSONLayout);
        pageConvertToJSONLayout.setHorizontalGroup(
            pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pageConvertToJSONLayout.createSequentialGroup()
                .addComponent(btnLoadDataset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLoadDatasetPath, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 80, Short.MAX_VALUE))
            .addGroup(pageConvertToJSONLayout.createSequentialGroup()
                .addGroup(pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pageConvertToJSONLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pageConvertToJSONLayout.createSequentialGroup()
                                .addComponent(lblLoadDatasetPath3)
                                .addGap(8, 8, 8)
                                .addComponent(txtValueAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pageConvertToJSONLayout.createSequentialGroup()
                                .addComponent(lblLoadDatasetPath2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTimeAttribute))))
                    .addGroup(pageConvertToJSONLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnConvertToJSON, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSaveJSONData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSaveJSONStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblConvertToJSONStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pageConvertToJSONLayout.setVerticalGroup(
            pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pageConvertToJSONLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLoadDatasetPath)
                    .addComponent(btnLoadDataset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoadDatasetPath2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimeAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pageConvertToJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValueAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLoadDatasetPath3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConvertToJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblConvertToJSONStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btnSaveJSONData, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSaveJSONStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        tabMain.addTab("tab1", pageConvertToJSON);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 386, Short.MAX_VALUE)
        );

        tabMain.addTab("tab2", jPanel2);

        jMenu1.setText("File");

        mnuLoadToJSON.setText("Load to JSON");
        jMenu1.add(mnuLoadToJSON);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMain)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadDatasetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadDatasetActionPerformed
        fileChooser = new JFileChooser();
        FileFilter filter1 = new ExtensionFileFilter("Text Files", new String[] { "TXT" });
        fileChooser.setFileFilter(filter1);
        int status = fileChooser.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
          File selectedFile = fileChooser.getSelectedFile();
          //System.out.println(selectedFile.getParent());
          datasetPath=selectedFile.getAbsolutePath();
          lblLoadDatasetPath.setText(datasetPath);
        } else if (status == JFileChooser.CANCEL_OPTION) {
          System.out.println(JFileChooser.CANCEL_OPTION);
        }
    }//GEN-LAST:event_btnLoadDatasetActionPerformed

    private void btnConvertToJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertToJSONActionPerformed
        String[] att=new String[]{txtTimeAttribute.getText(),txtValueAttribute.getText()};
        try{
            lblConvertToJSONStatus.setText("Converting...");
            convertedJSON = Util.makeJson(datasetPath, att);
            lblConvertToJSONStatus.setText("Conversion to JSON successful!!!");
        }catch(Exception ex){
            System.out.println(ex.toString());
        }
       
    }//GEN-LAST:event_btnConvertToJSONActionPerformed

    private void btnSaveJSONDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveJSONDataActionPerformed
        try{
            fileChooser = new JFileChooser();
            FileFilter filter1 = new ExtensionFileFilter("JSON Files", new String[] { "JSON" });
            fileChooser.setFileFilter(filter1);
            int status = fileChooser.showSaveDialog(jPanel2);
            if (status == JFileChooser.APPROVE_OPTION) {
              File selectedFile = fileChooser.getSelectedFile();
              //System.out.println(selectedFile.getParent());
              datasetPath=selectedFile.getAbsolutePath();
            FileWriter fileWriter = new FileWriter(datasetPath);
            fileWriter.write(convertedJSON);
            fileWriter.flush();
            lblSaveJSONStatus.setText("File Saved Successfully!!!");
            } else if (status == JFileChooser.CANCEL_OPTION) {
              System.out.println(JFileChooser.CANCEL_OPTION);
            }
        }catch(Exception ex){
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnSaveJSONDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertToJSON;
    private javax.swing.JButton btnLoadDataset;
    private javax.swing.JButton btnSaveJSONData;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblConvertToJSONStatus;
    private javax.swing.JLabel lblLoadDatasetPath;
    private javax.swing.JLabel lblLoadDatasetPath2;
    private javax.swing.JLabel lblLoadDatasetPath3;
    private javax.swing.JLabel lblSaveJSONStatus;
    private javax.swing.JMenuItem mnuLoadToJSON;
    private javax.swing.JPanel pageConvertToJSON;
    private javax.swing.JTabbedPane tabMain;
    private javax.swing.JTextField txtTimeAttribute;
    private javax.swing.JTextField txtValueAttribute;
    // End of variables declaration//GEN-END:variables
}
